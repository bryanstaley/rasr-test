<?xml version="1.0" encoding="UTF-8"?>

<!-- Adapted by NDP from Sphinx-4 "HUB4" config file -->

<!-- ************************************************** -->
<!-- Sphinx-4 Configuration File                        -->
<!-- ************************************************** -->

<config>
  <!-- ************************************************** -->
  <!-- Global Properties                                  -->
  <!-- ************************************************** -->

    	<property name="absoluteBeamWidth"  value="2000"/>
   	 	<property name="relativeBeamWidth"  value="1E-80"/>
    	<property name="absoluteWordBeamWidth" value="27"/>
    	<property name="relativeWordBeamWidth" value="1E-40"/>
    	<property name="wordInsertionProbability" value="0.1"/>
    	<property name="languageWeight" value="13.5"/>
    	<property name="silenceInsertionProbability" value="0.1"/>
    	    	    	    	
        <property name="recognizer" value="wordRecognizer"/>
       
       <property name="languageModel"  value="thisLanguageModel"/>
       <property name="dictionary"  value="thisDictionary" />
       
       <property name="acousticModel" value="generalAcousticModel" />
       <property name="unitManager" value="generalUnitManager" />
       
       <property name="frontend" value="rsFrontEnd"/>

  <!-- ************************************************** -->
  <!-- Components                                         -->
  <!-- ************************************************** -->

    <!-- ******************************************************** -->
    <!-- RASR Mode                                                -->
    <!-- ******************************************************** -->   
    <!--
    <component name="rasr" 
                type="com.redshift.rasr.sr.RasrRecognizer">
        <property name="recognizer" value="${recognizer}"/>
        <property name="scorer" value="${scorer}"/>
        <property name="inputSource" value="streamDataSource"/>
    </component>
    -->
    
    <!-- ************************************************** -->
    <!-- wordRecognizer                                     -->
    <!-- ************************************************** -->

    <component name="wordRecognizer"
          type="com.bws.test.StreamingRecognizer">
        <property name="streamDataSource" value="streamDataSource"/>
        <property name="resultListenerSource" value="resultListenerSource"/>
        <propertylist name="monitors">
            <item>accuracyTracker</item>
            <item>speedTracker</item>
            <item>memoryTracker</item>
            <item>recognizerMonitor</item>
            <item>beamFinder</item>
        </propertylist>
        <property name="decoder" value="decoder"/>
    </component>

    <!-- ************************************************** -->
    <!-- decoder                                            -->
    <!-- ************************************************** -->

    <component name="decoder"
          type="edu.cmu.sphinx.decoder.Decoder">
        <property name="searchManager" value="wordPruningSearchManager"/>
        <property name="featureBlockSize" value="50"/>
        <property name="fireNonFinalResults" value="true"/>
    </component>

    <!-- ************************************************** -->
    <!-- wordPruningSearchManager                           -->
    <!-- ************************************************** -->

    <component name="wordPruningSearchManager"
          type="edu.cmu.sphinx.decoder.search.WordPruningBreadthFirstSearchManager">
        <property name="scorer" value="threadedScorer"/>
        <property name="pruner" value="trivialPruner"/>
        <property name="acousticLookaheadFrames" value="1.7"/>
        <property name="logMath" value="logMath"/>
        <property name="activeListManager" value="activeListManager"/>
        <property name="buildWordLattice" value="${buildWordLattice}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
        <property name="growSkipInterval" value="0"/>
        <property name="linguist" value="lexTreeLinguist"/>
        <property name="checkStateOrder" value="false"/>
        <!-- <property name="keepAllTokens" value="true"/> -->
    </component>

    <!-- ************************************************** -->
    <!-- lexTreeLinguist                                    -->
    <!-- ************************************************** -->

    <component name="lexTreeLinguist"
          type="edu.cmu.sphinx.linguist.lextree.LexTreeLinguist">
        <property name="silenceInsertionProbability"
         value="${silenceInsertionProbability}"/>
        <property name="wantUnigramSmear" value="true"/>
        <property name="fillerInsertionProbability" value="1E-10"/>
        <property name="addFillerWords" value="false"/>
        <property name="acousticModel" value="${acousticModel}"/>
        <property name="languageModel" value="${languageModel}"/>
        <property name="wordInsertionProbability"
         value="${wordInsertionProbability}"/>
        <property name="languageWeight" value="${languageWeight}"/>
        <property name="logMath" value="logMath"/>
        <property name="dictionary" value="${dictionary}"/>
        <property name="unigramSmearWeight" value="1"/>
<!--         <property name="cacheSize" value="0"/> -->
        <property name="generateUnitStates" value="false"/>
        <property name="unitManager" value="${unitManager}"/>
    </component>
    
    <component name="thisLanguageModel" 
              type="edu.cmu.sphinx.linguist.language.ngram.large.LargeTrigramModel">
        <property name="unigramWeight" value="0.7"/>
        <property name="maxDepth" value="3"/>
        <property name="logMath" value="logMath"/>
        <property name="dictionary" value="${dictionary}"/>
        <property name="location" 
	              value="resource:/lasik/lasikQueriesplusBP_sss.txt_3gram.arpa.DMP"/>
   </component>
   
   <component name="thisDictionary" 
        type="edu.cmu.sphinx.linguist.dictionary.FastDictionary">
        <property name="dictionaryPath" value="resource:/lasik/lasik.dic"/>
        <property name="fillerPath" value="resource:/acousticModels/sfe_vfAll_noises_cmu7dicAligned.cd_cont_3000_32/noisedict"/>
        <property name="addSilEndingPronunciation" value="true"/>
        <property name="wordReplacement" value="&lt;sil&gt;"/>
        <property name="allowMissingWords" value="true"/>
        <property name="unitManager" value="${unitManager}"/>
    </component>
    <!-- ************************************************** -->
    <!-- trivialPruner                                      -->
    <!-- ************************************************** -->

    <component name="trivialPruner"
          type="edu.cmu.sphinx.decoder.pruner.SimplePruner">
    </component>

    <!-- ************************************************** -->
    <!-- threadedScorer                                     -->
    <!-- ************************************************** -->

    <component name="threadedScorer"
          type="edu.cmu.sphinx.decoder.scorer.ThreadedAcousticScorer">
        <property name="frontend" value="${frontend}"/>
    </component>

    <!-- ************************************************** -->
    <!-- mfcFrontEnd                                        -->
    <!-- ************************************************** -->

    <component name="rsFrontEnd" type="edu.cmu.sphinx.frontend.FrontEnd">
        <propertylist name="pipeline">
            <item>streamDataSource</item>
            <item>speechClassifier</item>
            <item>speechMarker</item>
            <item>nonSpeechDataFilter</item>
            <item>dither</item>
            <item>preemphasizer</item>            
            <item>windower</item>
            <item>fft</item>
            <item>melFilterBank</item>
            <item>dct2</item>            
            <!--item>batchCMN</item-->
            <item>liveCMN</item>
            <item>batchAGC</item>
            <item>featureExtraction</item>
        </propertylist>
    </component>
    
    <component name="speechClassifier"
        type="edu.cmu.sphinx.frontend.endpoint.SpeechClassifier">
        <property name="threshold" value="3.5"/>
        <property name="adjustment" value="0.001"/>
    </component>
    <component name="nonSpeechDataFilter"
        type="edu.cmu.sphinx.frontend.endpoint.NonSpeechDataFilter"/>
    <component name="speechMarker"
        type="edu.cmu.sphinx.frontend.endpoint.SpeechMarker">
        <property name="endSilence" value="2"/>
        <property name="startSpeech" value="2"/>
        <property name="speechLeader" value="2"/>
        <property name="speechTrailer" value="2"/>
    </component>
    <component name="dither"
        type="edu.cmu.sphinx.frontend.filter.Dither">
    </component>

    <component name="resultListenerSource" 
                type="com.bws.test.OutStreamResultListener">
        <property name="scorer" value="${scorer}"/>
        <property name="outputFormatter" value="multipartOutputFormatter"/>
        <!--property name="outputFormatter" value="basicOutputFormatter"/-->
    </component>

    <component name="multipartOutputFormatter" 
                type="com.bws.test.formatters.HtmlMultipartFormatter">
    </component>

    <component name="basicOutputFormatter" 
                type="com.bws.test.formatters.BasicFormatter">
    </component>

    <!-- ************************************************** -->
    <!-- streamDataSource                                   -->
    <!-- ************************************************** -->

    <component name="streamDataSource" 
                type="edu.cmu.sphinx.frontend.util.StreamDataSource">
        <property name="sampleRate" value="16000"/>
         <property name="bytesPerRead" value="320"/>
        <property name="bitsPerSample" value="16"/>
        <property name="bigEndianData" value="false"/>
        <property name="signedData" value="true"/>
    </component>
    
    <!-- ************************************************** -->
    <!-- preemphasizer                                       -->
    <!-- ************************************************** -->

    <component name="preemphasizer"
          type="edu.cmu.sphinx.frontend.filter.Preemphasizer">
    </component>

    <!-- ************************************************** -->
    <!-- windower                                           -->
    <!-- ************************************************** -->

    <component name="windower"
          type="edu.cmu.sphinx.frontend.window.RaisedCosineWindower">
    </component>

    <!-- ************************************************** -->
    <!-- fft                                                -->
    <!-- ************************************************** -->

    <component name="fft"
          type="edu.cmu.sphinx.frontend.transform.DiscreteFourierTransform">
    </component>

    <!-- ************************************************** -->
    <!-- melFilterBank                                      -->
    <!-- ************************************************** -->

    <component name="melFilterBank"
               type="edu.cmu.sphinx.frontend.frequencywarp.MelFrequencyFilterBank">
               <property name="numberFilters" value="40"/>
       		   <property name="minimumFrequency" value="133"/>
               <property name="maximumFrequency" value="6855"/> 
    </component>

    <!-- ************************************************** -->
    <!-- dct                                                -->
    <!-- ************************************************** -->

    <component name="dct"
          type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform">
    </component>
    
    <component name="dct2"
               type="edu.cmu.sphinx.frontend.transform.DiscreteCosineTransform2"/>

    <!-- ************************************************** -->
    <!-- batchCMN                                           -->
    <!-- ************************************************** -->

    <component name="batchCMN"
          type="edu.cmu.sphinx.frontend.feature.BatchCMN">
    </component>
    
    <!-- ************************************************** -->
    <!-- liveCMN                                            -->
    <!-- ************************************************** -->
    
    <component name="liveCMN" 
                type="edu.cmu.sphinx.frontend.feature.LiveCMN">
    </component>

    <component name="batchAGC"
               type="edu.cmu.sphinx.frontend.feature.BatchAGC"/>
               
    <!-- ************************************************** -->
    <!-- featureExtraction                                  -->
    <!-- ************************************************** -->

    <component name="featureExtraction"
          type="edu.cmu.sphinx.frontend.feature.DeltasFeatureExtractor">
    </component>

    <!-- ************************************************** -->
    <!-- activeListManager                                  -->
    <!-- ************************************************** -->

    <component name="activeListManager"
          type="edu.cmu.sphinx.decoder.search.SimpleActiveListManager">
        <propertylist name="activeListFactories">
	    	<item>standardActiveListFactory</item>
	    	<item>wordActiveListFactory</item>
	    	<item>wordActiveListFactory</item>
	    	<item>standardActiveListFactory</item>
	    	<item>standardActiveListFactory</item>
	    	<item>standardActiveListFactory</item>
	    </propertylist>
    </component>

    <component name="standardActiveListFactory" 
             type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeBeamWidth}"/>
    </component>
    
    <component name="wordActiveListFactory" 
             type="edu.cmu.sphinx.decoder.search.PartitionActiveListFactory">
        <property name="logMath" value="logMath"/>
        <property name="absoluteBeamWidth" value="${absoluteWordBeamWidth}"/>
        <property name="relativeBeamWidth" value="${relativeWordBeamWidth}"/>
    </component>

    <!-- ************************************************** -->
    <!-- accuracyTracker                                    -->
    <!-- ************************************************** -->

    <component name="accuracyTracker"
          type="edu.cmu.sphinx.instrumentation.BestPathAccuracyTracker">
        <property name="showRawResults" value="false"/>
        <property name="recognizer" value="${recognizer}"/>
        <property name="showAlignedResults" value="false"/>
    </component>

    <!-- ************************************************** -->
    <!-- speedTracker                                       -->
    <!-- ************************************************** -->

    <component name="speedTracker"
          type="edu.cmu.sphinx.instrumentation.SpeedTracker">
        <property name="showTimers" value="true"/>
        <property name="frontend" value="${frontend}"/>
        <property name="recognizer" value="${recognizer}"/>
    </component>

    <!-- ************************************************** -->
    <!-- memoryTracker                                      -->
    <!-- ************************************************** -->

    <component name="memoryTracker"
          type="edu.cmu.sphinx.instrumentation.MemoryTracker">
        <property name="recognizer" value="${recognizer}"/>
    </component>

    <!-- ************************************************** -->
    <!-- recognizerMonitor                                  -->
    <!-- ************************************************** -->

    <component name="recognizerMonitor"
          type="edu.cmu.sphinx.instrumentation.RecognizerMonitor">
        <property name="recognizer" value="${recognizer}"/>
        <propertylist name="allocatedMonitors">
            <item>configMonitor</item>
        </propertylist>
    </component>

    <!-- ************************************************** -->
    <!-- configMonitor                                      -->
    <!-- ************************************************** -->

    <component name="configMonitor"
          type="edu.cmu.sphinx.instrumentation.ConfigMonitor">
        <property name="saveConfigAsXML" value="true"/>
        <property name="showConfig" value="true"/>
    </component>

    <!-- ************************************************** -->
    <!-- beamFinder                                         -->
    <!-- ************************************************** -->

    <component name="beamFinder"
          type="edu.cmu.sphinx.instrumentation.BeamFinder">
        <property name="showDetails" value="true"/>
        <property name="logMath" value="logMath"/>
        <property name="showSummary" value="true"/>
        <property name="recognizer" value="${recognizer}"/>
        <property name="enable" value="false"/>
    </component>

</config>
